<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.igeekhome.ccsv2.mapper.CustomerServiceMapper">

    <sql id="sql1">
        <if test="nickName != null and nickName != ''">
            and customer_service.nick_name = #{nickName}
        </if>
        <if test="realName != null and realName != ''">
            and customer_service.real_name = #{realName}
        </if>
        <if test="id != 0">
            and customer_service.id = #{id}
        </if>
        <if test="phone != null and phone != ''">
            and customer_service.phone = #{phone}
        </if>
        <if test="workState != null">
            and customer_service.work_state = #{workState}
        </if>
        <if test="onlineState != null">
            and customer_service.online_state = #{onlineState}
        </if>
    </sql>


    <insert id="save" parameterType="CustomerService">
        insert into customer_service(
        phone
        , password
        , createTime
        <if test="id != 0">, id</if>
        <if test="email != null and email != ''">, email</if>
        <if test="nickName != null and nickName != ''">, nick_name</if>
        <if test="realName != null and realName != ''">, real_name</if>
        <if test="group != null and group.id != 0">, customer_service_group_id</if>
        <if test="role != null and role.id != 0">, role_id</if>
        <if test="serviceCap != null">, service_cap</if>
        )
        values (
        #{phone}
        , #{password}
        , #{createTime}
        <if test="id != 0">, #{id}</if>
        <if test="email != null and email != ''">, #{email}</if>
        <if test="nickName != null and nickName != ''">, #{nickName}</if>
        <if test="realName != null and realName != ''">, #{realName}</if>
        <if test="group != null and group.id != 0">, #{group.id}</if>
        <if test="role != null and role.id != 0">, #{role.id}</if>
        <if test="serviceCap != null">, #{serviceCap}</if>
        )
    </insert>


    <resultMap id="CustomerServiceMap" type="CustomerService">
        <!--主键映射-->
        <id column="customer_service_id" property="id"></id>
        <!--普通字段映射使用result,名字一致的可以不写-->
        <result column="phone" property="phone"></result>
        <result column="online_state" property="onlineState"></result>
        <result column="work_state" property="workState"></result>
        <result column="email" property="email"></result>
        <result column="real_name" property="realName"></result>
        <result column="nick_name" property="nickName"></result>
        <result column="total_online_time" property="totalOnlineTime"></result>
        <result column="average_response_time" property="averageResponseTime"></result>
        <result column="average_session_time" property="averageSessionTime"></result>
        <result column="session_count" property="sessionCount"></result>
        <result column="msg_count" property="msgCount"></result>
        <result column="service_cap" property="serviceCap"></result>
        <!--关联的实体对象查询使用association，这里映射的是CustomerServiceGroup类-->
        <!--关联customer_service_group-->
        <association property="group" javaType="com.igeekhome.ccsv2.entity.CustomerServiceGroup">
            <id column="group_id" property="id"></id>
            <result column="group_name" property="name"></result>
        </association>
        <!--关联customer_service_role-->
        <association property="role" javaType="com.igeekhome.ccsv2.entity.CustomerServiceRole">
            <id column="role_id" property="id"></id>
            <result column="role_name" property="name"></result>
        </association>
    </resultMap>

    <select id="queryWorkload" parameterType="CustomerService" resultType="CustomerService" ><!--工作量统计-->
        select * from workload
    </select>

    <select id="queryCheckingIn" parameterType="CustomerService" resultType="CustomerService" ><!--考勤统计-->
        select * from checking_in
    </select>

    <select id="queryWorkQuality" parameterType="CustomerService" resultType="CustomerService" ><!--工作质量统计-->
        select * from work_quality
    </select>

    <select id="queryFuzzy" parameterType="CustomerService" resultMap="CustomerServiceMap" ><!--客服管理中模糊查找客服-->
        select * from cs_group_role <!--三表连接视图-->
        where 1=1
        <choose>
            <when test="nickName != null and nickName != ''">
                and nick_name LIKE CONCAT('%', '${nickName}', '%')
            </when>
            <when test="realName != null and realName != ''">
                and real_name LIKE CONCAT('%', '${realName}', '%')
            </when>
            <when test="id != 0">
                and customer_service_id = #{id}
            </when>
            <when test="phone != null and phone != ''">
                and phone = #{phone}
            </when>
            <when test="email != null and email != ''">
                and email = #{email}
            </when>
            <when test="workState != null">
                and work_state = #{workState}
            </when>
            <when test="onlineState != null">
                and online_state = #{onlineState}
            </when>
            <otherwise></otherwise>
        </choose>
    </select>


    <select id="showByGroup" parameterType="CustomerServiceGroup" resultMap="CustomerServiceMap"><!--分组展示-->
        select * from cs_group_role <!--三表连接视图-->
        where 1=1
        <choose>
            <when test="id != 0">
                and customer_service_group_id = #{id}
            </when>
            <when test="name != null">
                and group_name = #{name}
            </when>
            <otherwise></otherwise>
        </choose>
    </select>


    <!-- <update id="update">

          update customer_service
           <trim prefix="set" suffixOverrides=",">
        <if test="newcs.updateTime != null">update_time = #{newcs.updateTime},</if>
        <if test="newcs.email != null"> email = #{newcs.email},</if>
        <if test="newcs.nickName != null"> nick_name = #{newcs.nickName},</if>
        <if test="newcs.realName != null"> real_name = #{newcs.realName},</if>
        <if test="newcs.phone != null"> phone = #{newcs.phone},</if>
        <if test="newcs.workState != null"> work_state = #{newcs.workState},</if>
        <if test="newcs.onlineState != null"> online_state = #{newcs.onlineState},</if>
        <if test="newcs.group != null and newcs.group.id != 0"> customer_service_group_id = #{newcs.group.id},</if>
        <if test="newcs.role != null and newcs.role.id != 0"> role_id = #{newcs.role.id},</if>
   <if test="newcs.id != 0"> id = #{newcs.id},</if>
      where id = #{oldcs.id}
  </trim>
 </update>-->
    <update id="update" parameterType="CustomerService">
        update customer_service set password = #{password},email=#{email},nick_name=#{nickName},real_name=#{realName},customer_service_id=#{customerServiceId},
         phone=#{phone},password=#{password} where id = #{id}
    </update>

<update id="updatePwd" parameterType="CustomerService">
 update customer_service set password = #{password} where id = #{id}
</update>


<select id="findPwd" parameterType="CustomerService" resultType="hashmap">
 SELECT
     coustomer_service.`password`
 FROM
     coustomer_service
 WHERE
     coustomer_service.id = #{id}

</select>
<select id="getOne" resultType="com.igeekhome.ccsv2.entity.CustomerService">
 select id,head_img,nick_name,customer_service_id,phone from customer_service where phone=#{phone} and password = #{password}
</select>


<delete id="deleteById" parameterType="int">
 delete from customer_service where id = #{id}
</delete>

<!--根据id批量删除customer_service,id以List形式存储-->
    <delete id="deleteBatch" parameterType="List">
        delete from customer_service where id in
        <!--针对集合类collection得到一个循环合集类似（1,2,3......）-->
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


</mapper>