<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.igeekhome.ccsv2.mapper.CustomerInfoMapper">

    <insert id="create" parameterType="CustomerInfo">
        insert into coustomer_info(nick_name,real_name,phone,email,company,address,level,channel,tags,remark,customer_id,customer_service_id)
        values (#{nickName},#{realName},#{phone},#{email},#{company},#{address},#{level},#{channel},#{tags},#{remark},#{customerId},#{customerServiceId})
    </insert>

    <delete id="delete" parameterType="CustomerInfo">
        DELETE FROM coustomer_info WHERE coustomer_info.customer_id = #{customerId}
    </delete>

    <select id="createId" resultType="java.util.HashMap">
        SELECT MAX(customer_id) FROM coustomer_info
    </select>


    <select id="select" parameterType="CustomerInfo" resultType="com.igeekhome.ccsv2.entity.CustomerInfo">
        select customer_id,nick_name,real_name,phone,email,level,channel from customer_info where 1=1
        <choose>
            <when test="nickName != null and nickName != ''">
                and nick_name = #{nickName}
            </when>
            <when test="realName != null and realName != ''">
                and real_name = #{realName}
            </when>
            <when test="phone != null and phone != ''">
                and phone = #{phone}
            </when>
            <when test="email != null and email != ''">
                and email = #{email}
            </when>
            <when test="level != null and level != ''">
                and level = #{level}
            </when>
            <when test="channel != null and channel != ''">
                and channel = #{channel}
            </when>
            <otherwise></otherwise>
        </choose>
    </select>


    <select id="selectByDate" resultType="com.igeekhome.ccsv2.entity.CustomerInfo">
        select customer_id,nick_name,real_name,phone,email,level,channel from customer_info where
            create_time between #{beginTime} and #{endTime}
    </select>

</mapper>